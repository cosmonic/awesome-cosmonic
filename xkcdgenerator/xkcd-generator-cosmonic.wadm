# Cosmonic PaaS lets you orchestrate WebAssembly Components on any cloud or edge using CNCF wasmCloud.
# 
# The app you are about to deploy:
# ┌─────────────────────────────────────────────────────────────────────┐
# │                                                                     │
# │   Hosted on Cosmonic                                                │
# │   ( Your Constellation)                             ┌───────────┐   │
# │                                                     │   Web     │   │
# │                          ┌────────────────┐◄─────   │  Browser  │   │
# │                      ┌───┤  HTTP Server   │         │           │   │
# │                      │   │ Wasm Component ├─────►   │   /\_/\   │   │
# │  ┌─────────────────┐ │   └────────────────┘         │  ( o.o )  │   │
# │  │    XKCD App     ├─┤                              │   > ^ <   │   │
# │  │  ( Your Code )  │ │   ┌────────────────┐         └───────────┘   │
# │  └─────────────────┘ └───┤  HTTP Client   ├────► fetch xkcd         │
# │                          │ Wasm Client    │                         │
# │                          └────────────────┘                         │
# │                                                                     │
# └─────────────────────────────────────────────────────────────────────┘
#
# How does it work?
# ------------------------------
# This OAM file lets you build your Application out of WebAssembly components in any
# supported language. This uses three components:
# 1. XKCD - your "business logic" answer http request, fetch random image, serve image
# 2. HTTP WebServer - prebuilt component, hosted on Cosmonic, this handles http & provisions a custom domain
# 3. HTTP Client - prebuilt component, to fetch the image
#
# Why does this help you?
# ------------------------------
# Cosmonic leverages WebAssembly to reduce the boilerplate you copy from app to app. 
# Writing less code means mantaining less code.
# Each component runs in a secure deny-by-default WebAssembly Sandbox
# Components can be instantly auto-scaled quickly from 0 to 10,000's quickly
#
# Where does it run?
# ------------------------------
# Each component can be scheduled to run one or _more_ times across your infrastructure
# using labels or other features you can increase replicas for reliability, availability, or performance.
# See Getting Started for More:
# https://cosmonic.com/docs

apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  annotations:
    description: wasmCloud XKCD Example
    version: v1-cosmonic
  name: xkcd
spec:
  components:
    - name: xkcd
      properties:
# Source for this image: https://github.com/cosmonic/awesome-cosmonic/blob/main/xkcdgenerator/src/lib.rs
        image: wasmcloud.azurecr.io/xkcd:0.1.7
      traits:
        - properties:
            replicas: 1
            spread:
              - name: oncosmonic
                requirements:
                  cosmonic_managed: 'true'
          type: spreadscaler
        - properties:
            target: httpserver
          type: linkdef
        - properties:
            target: httpclient
          type: linkdef
      type: actor
    - name: httpserver
      properties:
        contract: wasmcloud:httpserver
        image: cosmonic.azurecr.io/httpserver_wormhole:0.5.4
      traits:
        - properties:
            replicas: 1
            spread:
              - name: oncosmonic
                requirements:
                  cosmonic_managed: 'true'
          type: spreadscaler
      type: capability
    - name: httpclient
      properties:
        contract: wasmcloud:httpclient
        image: wasmcloud.azurecr.io/httpclient:0.7.0
      traits:
        - properties:
            replicas: 1
            spread:
              - name: oncosmonic
                requirements:
                  cosmonic_managed: 'true'
          type: spreadscaler
      type: capability
