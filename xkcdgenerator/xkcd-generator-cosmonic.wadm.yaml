# XKCD Part 1 - Running on Cosmonic PaaS
# Cosmonic PaaS lets you orchestrate WebAssembly Components on any cloud or edge using CNCF wasmCloud.
#
# The app you are about to deploy:
# ┌────────────────────────────────────────────────┐      Internet
# │                                                │    ┌───────────┐
# │ Hosted on Cosmonic       ┌────────────────┐    │    │   Web     │
# │ ( Your Constellation)    │  HTTP Server   │◄───┼────┤  Browser  │
# │                      ┌───┤ Wasm Component │────┼───►│           │
# │                      │   │                │    │    │   /\_/\   │
# │  ┌─────────────────┐ │   └────────────────┘    │    │  ( o.o )  │
# │  │    XKCD App     ├─┤                         │    │   > ^ <   │
# │  │  ( Your Code )  │ │   ┌────────────────┐    │    └───────────┘
# │  └─────────────────┘ └───┤  HTTP Client   ├────┼───► fetch xkcd
# │                          │ Wasm Client    │    │
# │                          └────────────────┘    │
# │                                                │
# └────────────────────────────────────────────────┘
#
# How does it work?
# ------------------------------
# This OAM file lets you build your Application out of WebAssembly components in any
# supported language. This uses three components:
# 1. XKCD - your "business logic" answer http request, fetch random image, serve image
# 2. HTTP WebServer Provider- a prebuilt component, hosted on Cosmonic, handling http with a custom domain
# 3. HTTP Client Provider - a prebuilt component, to fetch the image
#
# Why does this help you?
# ------------------------------
# Using WebAssembly components reduces the boilerplate you copy from app to app.
# Writing less code means mantaining less code.
# Each component runs in a secure deny-by-default WebAssembly Sandbox
# Components can be run locally, or remotely - closer to users
# Component Providers are hot swapable - move between different SQL, KV, Message w/o app changes
# Components can be instantly auto-scaled quickly from 0 to 10,000's quickly
#
# Where does it run?
# ------------------------------
# Each component can be scheduled to run one or _more_ times across your infrastructure
# using labels or other features you can increase replicas for reliability, availability, or performance.
# See Getting Started for More:
# https://cosmonic.com/docs

apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  annotations:
    description: XKCD Example (Cosmonic Cloud)
    version: v1.0.0-cosmonic-cloud
  name: xkcd
spec:
  components:
    - name: xkcd
      properties:
        #
        # Source for this image: https://github.com/cosmonic/awesome-cosmonic/blob/main/xkcdgenerator/src/lib.rs
        # With Cosmonic developers are responsible for their business logic, leveraging WebAssembly Components
        #
        image: cosmonic.azurecr.io/xkcdgenerator:0.1.0
      traits:
        - properties:
            replicas: 1
            spread:
              - name: oncosmonic
                requirements:
                  cosmonic_managed: "true"
          type: spreadscaler
        - properties:
            target: httpserver
          type: linkdef
        - properties:
            target: httpclient
          type: linkdef
      type: actor
    - name: httpserver
      properties:
        contract: wasmcloud:httpserver
        image: cosmonic.azurecr.io/httpserver_wormhole:0.5.4
      traits:
        - properties:
            replicas: 1
            spread:
              - name: oncosmonic
                requirements:
                  cosmonic_managed: "true"
          type: spreadscaler
      type: capability
    - name: httpclient
      properties:
        contract: wasmcloud:httpclient
        image: wasmcloud.azurecr.io/httpclient:0.7.0
      traits:
        - properties:
            replicas: 1
            spread:
              - name: oncosmonic
                requirements:
                  cosmonic_managed: "true"
          type: spreadscaler
      type: capability
